configure rspec in rails application.

  1.install rspec 
  
    echo 'gem "rspec-rails", :group => [:development, :test]' >> Gemfile
    
  2.bundle
  
  3.generate bootstrap folder structure 
      
        rails generate rspec:install
  
  4.ensure test environment created in database.yml
  
  5. and then do migrations
        rake db:migrate && rake db:test:prepare
  
  6.in application.rb try this
      # config.web_console.development_only = false
  
  7.then run rspec 
      bundle exec rspec
      
      For creating spec for model,controller
        rails generate rspec:model widget


configure cucumber in rails app

  1.add gem to gemfile
    
      group :test, :development do
        gem 'cucumber-rails', :require => false
        # database_cleaner is not required, but highly recommended
        gem 'database_cleaner'
      end
  2.bundle
  
  3.rails generate cucumber:install
  
  4.bundle exec cucumber

For more info visit https://cucumber.io/docs/reference/rails

If server not update bundle, shut down server

  sudo init 6
  
  
  ===================================================================
  https://inia.objectfrontier.com/services/resources-info
  
  key: HZ6EkgQdGgPVTOJuXwef
content-type: application/json
=====================================================================



Installation Guide for Mean stack environment

====================================================
https://www.ostechnix.com/install-mean-js-stack-ubuntu/
====================================================

To reclaim ownership of the .npm directory execute:

sudo chown -R $(whoami) ~/.npm

To run node inspector with server
  node-debug -p 3001 server.js

Nginx server commands
  
To tail error log - tail -f /var/log/nginx/error.log
sudo service nginx start|stop|restart|status
To test nginx - sudo nginx -t

Reference:
  https://www.digitalocean.com/community/tutorials/how-to-set-up-a-node-js-application-for-production-on-ubuntu-16-04
  
  
To fix Enopsc  
echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

to save git credentials
git config --global user.name
git config --global user.password

git config credential.helper store
git pull


//git create feature branch and push to origin
checkout a branch and create a new branch
git checkout -b "branch_name"

// push to origin
git push -u origin "branch_name"

// others get branch by 
git fetch
git checkout origin/your_branch

// installing pupetter with chromium issue
sudo npm install puppeteer --unsafe-perm=true --allow-root
